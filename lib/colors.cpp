#include "colors.hpp"

int aliceblue[3] = {240, 248, 255};
int antiquewhite[3] = {250, 235, 215};
int aqua[3] = {0, 255, 255};
int aquamarine[3] = {127, 255, 212};
int azure[3] = {240, 255, 255};
int beige[3] = {245, 245, 220};
int bisque[3] = {255, 228, 196};
int black[3] = {0, 0, 0};
int blanchedalmond[3] = {255, 235, 205};
int blue[3] = {0, 0, 255};
int blueviolet[3] = {138, 43, 226};
int brown[3] = {165, 42, 42};
int burlywood[3] = {222, 184, 135};
int cadetblue[3] = {95, 158, 160};
int chartreuse[3] = {127, 255, 0};
int chocolate[3] = {210, 105, 30};
int coral[3] = {255, 127, 80};
int cornflowerblue[3] = {100, 149, 237};
int cornsilk[3] = {255, 248, 220};
int crimson[3] = {220, 20, 60};
int cyan[3] = {0, 255, 255};
int darkblue[3] = {0, 0, 139};
int darkcyan[3] = {0, 139, 139};
int darkgoldenrod[3] = {184, 134, 11};
int darkgray[3] = {169, 169, 169};
int darkgreen[3] = {0, 100, 0};
int darkgrey[3] = {169, 169, 169};
int darkkhaki[3] = {189, 183, 107};
int darkmagenta[3] = {139, 0, 139};
int darkolivegreen[3] = {85, 107, 47};
int darkorange[3] = {255, 140, 0};
int darkorchid[3] = {153, 50, 204};
int darkred[3] = {139, 0, 0};
int darksalmon[3] = {233, 150, 122};
int darkseagreen[3] = {143, 188, 143};
int darkslateblue[3] = {72, 61, 139};
int darkslategray[3] = {47, 79, 79};
int darkslategrey[3] = {47, 79, 79};
int darkturquoise[3] = {0, 206, 209};
int darkviolet[3] = {148, 0, 211};
int deeppink[3] = {255, 20, 147};
int deepskyblue[3] = {0, 191, 255};
int dimgray[3] = {105, 105, 105};
int dimgrey[3] = {105, 105, 105};
int dodgerblue[3] = {30, 144, 255};
int firebrick[3] = {178, 34, 34};
int floralwhite[3] = {255, 250, 240};
int forestgreen[3] = {34, 139, 34};
int fuchsia[3] = {255, 0, 255};
int gainsboro[3] = {220, 220, 220};
int ghostwhite[3] = {248, 248, 255};
int gold[3] = {255, 215, 0};
int goldenrod[3] = {218, 165, 32};
int gray[3] = {128, 128, 128};
int green[3] = {0, 128, 0};
int greenyellow[3] = {173, 255, 47};
int grey[3] = {128, 128, 128};
int honeydew[3] = {240, 255, 240};
int hotpink[3] = {255, 105, 180};
int indianred[3] = {205, 92, 92};
int indigo[3] = {75, 0, 130};
int ivory[3] = {255, 255, 240};
int khaki[3] = {240, 230, 140};
int lavender[3] = {230, 230, 250};
int lavenderblush[3] = {255, 240, 245};
int lawngreen[3] = {124, 252, 0};
int lemonchiffon[3] = {255, 250, 205};
int lightblue[3] = {173, 216, 230};
int lightcoral[3] = {240, 128, 128};
int lightcyan[3] = {224, 255, 255};
int lightgoldenrodyellow[3] = {250, 250, 210};
int lightgray[3] = {211, 211, 211};
int lightgreen[3] = {144, 238, 144};
int lightgrey[3] = {211, 211, 211};
int lightpink[3] = {255, 182, 193};
int lightsalmon[3] = {255, 160, 122};
int lightseagreen[3] = {32, 178, 170};
int lightskyblue[3] = {135, 206, 250};
int lightslategray[3] = {119, 136, 153};
int lightslategrey[3] = {119, 136, 153};
int lightsteelblue[3] = {176, 196, 222};
int lightyellow[3] = {255, 255, 224};
int lime[3] = {0, 255, 0};
int limegreen[3] = {50, 205, 50};
int linen[3] = {250, 240, 230};
int magenta[3] = {255, 0, 255};
int maroon[3] = {128, 0, 0};
int mediumaquamarine[3] = {102, 205, 170};
int mediumblue[3] = {0, 0, 205};
int mediumorchid[3] = {186, 85, 211};
int mediumpurple[3] = {147, 112, 219};
int mediumseagreen[3] = {60, 179, 113};
int mediumslateblue[3] = {123, 104, 238};
int mediumspringgreen[3] = {0, 250, 154};
int mediumturquoise[3] = {72, 209, 204};
int mediumvioletred[3] = {199, 21, 133};
int midnightblue[3] = {25, 25, 112};
int mintcream[3] = {245, 255, 250};
int mistyrose[3] = {255, 228, 225};
int moccasin[3] = {255, 228, 181};
int navajowhite[3] = {255, 222, 173};
int navy[3] = {0, 0, 128};
int oldlace[3] = {253, 245, 230};
int olive[3] = {128, 128, 0};
int olivedrab[3] = {107, 142, 35};
int orange[3] = {255, 165, 0};
int orangered[3] = {255, 69, 0};
int orchid[3] = {218, 112, 214};
int palegoldenrod[3] = {238, 232, 170};
int palegreen[3] = {152, 251, 152};
int paleturquoise[3] = {175, 238, 238};
int palevioletred[3] = {219, 112, 147};
int papayawhip[3] = {255, 239, 213};
int peachpuff[3] = {255, 218, 185};
int peru[3] = {205, 133, 63};
int pink[3] = {255, 192, 203};
int plum[3] = {221, 160, 221};
int powderblue[3] = {176, 224, 230};
int purple[3] = {128, 0, 128};
int rebeccapurple[3] = {102, 51, 153};
int red[3] = {255, 0, 0};
int rosybrown[3] = {188, 143, 143};
int royalblue[3] = {65, 105, 225};
int saddlebrown[3] = {139, 69, 19};
int salmon[3] = {250, 128, 114};
int sandybrown[3] = {244, 164, 96};
int seagreen[3] = {46, 139, 87};
int seashell[3] = {255, 245, 238};
int sienna[3] = {160, 82, 45};
int silver[3] = {192, 192, 192};
int skyblue[3] = {135, 206, 235};
int slateblue[3] = {106, 90, 205};
int slategray[3] = {112, 128, 144};
int slategrey[3] = {112, 128, 144};
int snow[3] = {255, 250, 250};
int springgreen[3] = {0, 255, 127};
int steelblue[3] = {70, 130, 180};
int tans[3] = {210, 180, 140};
int teal[3] = {0, 128, 128};
int thistle[3] = {216, 191, 216};
int tomato[3] = {255, 99, 71};
int turquoise[3] = {64, 224, 208};
int violet[3] = {238, 130, 238};
int wheat[3] = {245, 222, 179};
int white[3] = {255, 255, 255};
int whitesmoke[3] = {245, 245, 245};
int yellow[3] = {255, 255, 0};
int yellowgreen[3] = {154, 205, 50};

Array colorRgb(Env env, int rgb[3])
{
	Array result = Array::New(env);
	result.Set(0U, rgb[0]);
	result.Set(1U, rgb[1]);
	result.Set(2U, rgb[2]);
	return result;
}
Object colors_exports(Env env, Object exports)
{
	Object result = Object::New(env);
	result.Set("aliceblue", colorRgb(env, aliceblue));
	result.Set("antiquewhite", colorRgb(env, antiquewhite));
	result.Set("aqua", colorRgb(env, aqua));
	result.Set("aquamarine", colorRgb(env, aquamarine));
	result.Set("azure", colorRgb(env, azure));
	result.Set("beige", colorRgb(env, beige));
	result.Set("bisque", colorRgb(env, bisque));
	result.Set("black", colorRgb(env, black));
	result.Set("blanchedalmond", colorRgb(env, blanchedalmond));
	result.Set("blue", colorRgb(env, blue));
	result.Set("blueviolet", colorRgb(env, blueviolet));
	result.Set("brown", colorRgb(env, brown));
	result.Set("burlywood", colorRgb(env, burlywood));
	result.Set("cadetblue", colorRgb(env, cadetblue));
	result.Set("chartreuse", colorRgb(env, chartreuse));
	result.Set("chocolate", colorRgb(env, chocolate));
	result.Set("coral", colorRgb(env, coral));
	result.Set("cornflowerblue", colorRgb(env, cornflowerblue));
	result.Set("cornsilk", colorRgb(env, cornsilk));
	result.Set("crimson", colorRgb(env, crimson));
	result.Set("cyan", colorRgb(env, cyan));
	result.Set("darkblue", colorRgb(env, darkblue));
	result.Set("darkcyan", colorRgb(env, darkcyan));
	result.Set("darkgoldenrod", colorRgb(env, darkgoldenrod));
	result.Set("darkgray", colorRgb(env, darkgray));
	result.Set("darkgreen", colorRgb(env, darkgreen));
	result.Set("darkgrey", colorRgb(env, darkgrey));
	result.Set("darkkhaki", colorRgb(env, darkkhaki));
	result.Set("darkmagenta", colorRgb(env, darkmagenta));
	result.Set("darkolivegreen", colorRgb(env, darkolivegreen));
	result.Set("darkorange", colorRgb(env, darkorange));
	result.Set("darkorchid", colorRgb(env, darkorchid));
	result.Set("darkred", colorRgb(env, darkred));
	result.Set("darksalmon", colorRgb(env, darksalmon));
	result.Set("darkseagreen", colorRgb(env, darkseagreen));
	result.Set("darkslateblue", colorRgb(env, darkslateblue));
	result.Set("darkslategray", colorRgb(env, darkslategray));
	result.Set("darkslategrey", colorRgb(env, darkslategrey));
	result.Set("darkturquoise", colorRgb(env, darkturquoise));
	result.Set("darkviolet", colorRgb(env, darkviolet));
	result.Set("deeppink", colorRgb(env, deeppink));
	result.Set("deepskyblue", colorRgb(env, deepskyblue));
	result.Set("dimgray", colorRgb(env, dimgray));
	result.Set("dimgrey", colorRgb(env, dimgrey));
	result.Set("dodgerblue", colorRgb(env, dodgerblue));
	result.Set("firebrick", colorRgb(env, firebrick));
	result.Set("floralwhite", colorRgb(env, floralwhite));
	result.Set("forestgreen", colorRgb(env, forestgreen));
	result.Set("fuchsia", colorRgb(env, fuchsia));
	result.Set("gainsboro", colorRgb(env, gainsboro));
	result.Set("ghostwhite", colorRgb(env, ghostwhite));
	result.Set("gold", colorRgb(env, gold));
	result.Set("goldenrod", colorRgb(env, goldenrod));
	result.Set("gray", colorRgb(env, gray));
	result.Set("green", colorRgb(env, green));
	result.Set("greenyellow", colorRgb(env, greenyellow));
	result.Set("grey", colorRgb(env, grey));
	result.Set("honeydew", colorRgb(env, honeydew));
	result.Set("hotpink", colorRgb(env, hotpink));
	result.Set("indianred", colorRgb(env, indianred));
	result.Set("indigo", colorRgb(env, indigo));
	result.Set("ivory", colorRgb(env, ivory));
	result.Set("khaki", colorRgb(env, khaki));
	result.Set("lavender", colorRgb(env, lavender));
	result.Set("lavenderblush", colorRgb(env, lavenderblush));
	result.Set("lawngreen", colorRgb(env, lawngreen));
	result.Set("lemonchiffon", colorRgb(env, lemonchiffon));
	result.Set("lightblue", colorRgb(env, lightblue));
	result.Set("lightcoral", colorRgb(env, lightcoral));
	result.Set("lightcyan", colorRgb(env, lightcyan));
	result.Set("lightgoldenrodyellow", colorRgb(env, lightgoldenrodyellow));
	result.Set("lightgray", colorRgb(env, lightgray));
	result.Set("lightgreen", colorRgb(env, lightgreen));
	result.Set("lightgrey", colorRgb(env, lightgrey));
	result.Set("lightpink", colorRgb(env, lightpink));
	result.Set("lightsalmon", colorRgb(env, lightsalmon));
	result.Set("lightseagreen", colorRgb(env, lightseagreen));
	result.Set("lightskyblue", colorRgb(env, lightskyblue));
	result.Set("lightslategray", colorRgb(env, lightslategray));
	result.Set("lightslategrey", colorRgb(env, lightslategrey));
	result.Set("lightsteelblue", colorRgb(env, lightsteelblue));
	result.Set("lightyellow", colorRgb(env, lightyellow));
	result.Set("lime", colorRgb(env, lime));
	result.Set("limegreen", colorRgb(env, limegreen));
	result.Set("linen", colorRgb(env, linen));
	result.Set("magenta", colorRgb(env, magenta));
	result.Set("maroon", colorRgb(env, maroon));
	result.Set("mediumaquamarine", colorRgb(env, mediumaquamarine));
	result.Set("mediumblue", colorRgb(env, mediumblue));
	result.Set("mediumorchid", colorRgb(env, mediumorchid));
	result.Set("mediumpurple", colorRgb(env, mediumpurple));
	result.Set("mediumseagreen", colorRgb(env, mediumseagreen));
	result.Set("mediumslateblue", colorRgb(env, mediumslateblue));
	result.Set("mediumspringgreen", colorRgb(env, mediumspringgreen));
	result.Set("mediumturquoise", colorRgb(env, mediumturquoise));
	result.Set("mediumvioletred", colorRgb(env, mediumvioletred));
	result.Set("midnightblue", colorRgb(env, midnightblue));
	result.Set("mintcream", colorRgb(env, mintcream));
	result.Set("mistyrose", colorRgb(env, mistyrose));
	result.Set("moccasin", colorRgb(env, moccasin));
	result.Set("navajowhite", colorRgb(env, navajowhite));
	result.Set("navy", colorRgb(env, navy));
	result.Set("oldlace", colorRgb(env, oldlace));
	result.Set("olive", colorRgb(env, olive));
	result.Set("olivedrab", colorRgb(env, olivedrab));
	result.Set("orange", colorRgb(env, orange));
	result.Set("orangered", colorRgb(env, orangered));
	result.Set("orchid", colorRgb(env, orchid));
	result.Set("palegoldenrod", colorRgb(env, palegoldenrod));
	result.Set("palegreen", colorRgb(env, palegreen));
	result.Set("paleturquoise", colorRgb(env, paleturquoise));
	result.Set("palevioletred", colorRgb(env, palevioletred));
	result.Set("papayawhip", colorRgb(env, papayawhip));
	result.Set("peachpuff", colorRgb(env, peachpuff));
	result.Set("peru", colorRgb(env, peru));
	result.Set("pink", colorRgb(env, pink));
	result.Set("plum", colorRgb(env, plum));
	result.Set("powderblue", colorRgb(env, powderblue));
	result.Set("purple", colorRgb(env, purple));
	result.Set("rebeccapurple", colorRgb(env, rebeccapurple));
	result.Set("red", colorRgb(env, red));
	result.Set("rosybrown", colorRgb(env, rosybrown));
	result.Set("royalblue", colorRgb(env, royalblue));
	result.Set("saddlebrown", colorRgb(env, saddlebrown));
	result.Set("salmon", colorRgb(env, salmon));
	result.Set("sandybrown", colorRgb(env, sandybrown));
	result.Set("seagreen", colorRgb(env, seagreen));
	result.Set("seashell", colorRgb(env, seashell));
	result.Set("sienna", colorRgb(env, sienna));
	result.Set("silver", colorRgb(env, silver));
	result.Set("skyblue", colorRgb(env, skyblue));
	result.Set("slateblue", colorRgb(env, slateblue));
	result.Set("slategray", colorRgb(env, slategray));
	result.Set("slategrey", colorRgb(env, slategrey));
	result.Set("snow", colorRgb(env, snow));
	result.Set("springgreen", colorRgb(env, springgreen));
	result.Set("steelblue", colorRgb(env, steelblue));
	result.Set("tan", colorRgb(env, tans));
	result.Set("teal", colorRgb(env, teal));
	result.Set("thistle", colorRgb(env, thistle));
	result.Set("tomato", colorRgb(env, tomato));
	result.Set("turquoise", colorRgb(env, turquoise));
	result.Set("violet", colorRgb(env, violet));
	result.Set("wheat", colorRgb(env, wheat));
	result.Set("white", colorRgb(env, white));
	result.Set("whitesmoke", colorRgb(env, whitesmoke));
	result.Set("yellow", colorRgb(env, yellow));
	result.Set("yellowgreen", colorRgb(env, yellowgreen));
	exports.Set("colors", result);

	return exports;
}